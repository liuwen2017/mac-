JavaScript 面向对象

1.什么是面向对象编程
	①用对象的思想去写代码，就是面向对象编程
	    过程式写法 
	    面向对象写法

2.面向对象编程(OOP)的特点
	a： 抽象：抓住核心问题
	b： 封装：只能通过对象来访问方法
	c： 继承：从已有对象上继承出新的对象
	d： 多态：多对象的不同形态

3.对象的组成
	方法(行为，操作)  ----函数：过程、动态的
	属性 ---- 变量：状态、静态的


4.创建第一个面向对象程序
	为对象添加属性和方法
		-object对象
		-this指向
		-创建两个对象：重复代码过多

5.工厂模式
	面向对象中的封装函数
	改成与系统对象类似的写法
		--首字母大写
		--New关键字提取
		--this指向为新创建的对象

	构造函数
		--用来创建对象的函数，叫做构造函数

	存在问题
		--对象的引用
		--浪费内存

6.原型 - prototype
	概念：
		-重写对象方法，让相同方法在内存中存在一份(提高性能)
	学习原型：
		-类比：css中的Class
		- 方法相当于style 属性
		- 当原型和方法冲突时，听方法的
	通过原型改写工厂方式
		-原则	
			》相同属性和方法可以加载原型上
			》混合的编程模式
	总结面象对象编程写法
		-构造函数加属性，原型加方法


7.面向对象的选项卡
	原则：
		-先写出普通的写法，然后改成面向对象的写法
			》普通方法变型
				·尽量不要出现函数嵌套函数
				·可以有全局变量
				·把onload中不是赋值的语句放到单独的函数中
			》改成面向对象
				·全局变量就是属性
				·函数就是方法
				·onload中创建对象
				·改this指向问题
					事件或者定时器，尽量让面向对象中的this指向对象


==================================================

1.包装面向对象
	Tip：尽量不要去修改或者添加系统对象下面的属性和方法
	str字符串包装对象为 String

	var str = 'hello';
	str.charAt(0);  
	此时str明明是一个字符串，但是此时却可以使用方法，原因在于：
	在基本类型使用方法的一瞬间，
	基本类型会找到对应的包装对象类型，然后包装对象类型把所有的属性和方法给了基本类型，然后包装对象
	消失

	此时假定有如下操作
	var str = 'hello';
	str.number = 10;
	alert(str.number) // undefined 
	结果为undefined，为什么会为undefined呢？
	当str.number 的时候，基础类型str会找到包装对象，然后包装对象类型把所有的属性和方法给了基本
	类型，然后包装对象消失，当包装对象消失后，我们再一次的应用str.number 相当于第二次的创建了属性
	所以为undefined