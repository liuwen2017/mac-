/**
 * Created by liujunhang on 2017/3/7.
 */
//闭包的好处
/*
* 1.希望一个变量长期驻扎在内存当中
* 2.可以避免全局变量的污染
* 3.私有成员的存在
* */

/*var a =  1;

function aaa() {
    a++;
    console.log(a);
}

aaa();  // 2
aaa(); */ // 3
//变量a 是一个全局变量，所以在函数的外部也是可以被引用到的
//console.log(a); //3

//此时a是全局变量，在被函数使用之后，值被更改。

//在实际开发的时候，应该尽量减少全局变量的使用，因为全局变量会影响执行的性能

//为了提高性能，应该尽可能的把变量变为局部变量

// function aaa()
// {
//     var a = 1;
//     a++;
//     console.log(a);
// }
//
// aaa();  // 2
// aaa();  // 2

//此时位于函数aaa内部的局部变量a ，在函数执行完成一次之后就会被回收，所以每一次调用函数最后的结果都为2


//如果想要把效果改为之前的效果，就可以采用闭包函数
//而在此使用闭包的好处，既可以让变量为局部变量有可以让值不断的累加

function aaa()
{
    var a = 1;

    return function (){
        a++;
        console.log(a);
    }
}

//调用函数
var b = aaa();
b();  // 2
b();  // 3

//并且此时在函数的外面也不能够引用到这个变量a
//console.log(a);  // 此时会报错

//而在真实的开发环境中，大多数的情况下又与上面的写法不太一样 通常情况下是将函数声明改写为函数表达式